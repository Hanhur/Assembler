
.code 
exploit proc
	win_number	equ dword ptr[ebp - 4] ; 4 bit
	buffer		equ dword ptr[ebp - 10h] ; 12 bit 
	;--------------------
	push ebp
	mov ebp, esp
	add esp, 0FFFFFFF0h ; -16 bit
	;-------------------
	push ebx
	push esi
	push edi
	;------------------
	mov win_number, 0
	;------------------
	printf("You have to enter a right string to get a win!\n")
	;------------------
	; lea -> zagruska v register address oblasti pamyati
	lea esi, buffer
	lea edx, win_number
	;------------------
	printf("buffer: %08x win number: %08x\n", esi, edx)
	
	;------------------
	;	User Input
	;------------------
	
	push esi
	;------------------
	call crt_gets
	
	;------------------
	; Check User Input
	;------------------
	
	mov eax, win_number
	cmp eax, 4D53414Dh
	jne @@Ret
	;------------------
	printf("You Win!\n")
	;------------------
	@@Ret:
		pop edi
		pop esi
		pop ebx
		;-----------------
		mov esp, ebp
		pop ebp
		;-----------------
		Ret
exploit endp
;==============================================
exploit2 proc
	LOCAL number:DWORD
	LOCAL buffer_input[12]:BYTE
	;------------------
	push ebx
	push esi
	push edi
	;------------------
	and number, 0
	;------------------
	printf("You have to enter a right string to get a win!\n")
	;------------------
	; lea -> zagruska v register address oblasti pamyati
	lea esi, buffer_input
	lea edx, number
	;------------------
	printf("buffer: %08x win number: %08x\n", esi, edx)
	
	;------------------
	;	User Input
	;------------------
	push 0Ch
	push esi
	;------------------
	;call crt_gets
	call StdIn
	
	;------------------
	; Check User Input
	;------------------
	
	mov eax, win_number
	cmp eax, 4D53414Dh
	jne @@Ret
	;------------------
	printf("You Win!\n")
	;------------------
	@@Ret:
		pop edi
		pop esi
		pop ebx
		;--------------
		Ret
exploit2 endp